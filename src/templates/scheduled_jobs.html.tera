{% extends "layout.html.tera" %}

{% block title %}Scheduled Jobs{% endblock title %}

{% block content %}
  <div class="bg-white shadow rounded-lg p-6">
    <h2 class="text-xl font-semibold mb-4">Scheduled Jobs</h2>

    {% if jobs | length == 0 %}
      <p class="text-gray-500">No scheduled jobs found.</p>
    {% else %}
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-100">
            <tr class="text-left text-sm font-semibold text-gray-700">
              <th class="px-4 py-2">Job ID</th>
              <th class="px-4 py-2">Queue</th>
              <th class="px-4 py-2">Scheduled At</th>
              <th class="px-4 py-2">Args</th>
              <th class="px-4 py-2">Actions</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-100 text-sm">
            {% for job in jobs %}
              <tr>
                <td class="px-4 py-2 font-mono text-blue-700">{{ job.id }}</td>
                <td class="px-4 py-2">{{ job.queue | default(value="N/A") }}</td>
                <td class="px-4 py-2">{{ job.scheduled_at }}</td>
                <td class="px-4 py-2 whitespace-nowrap">
                  <pre class="text-xs text-gray-600">{{ job.args | json_encode | safe }}</pre>
                </td>
                <td class="px-4 py-2 space-x-2">
                  <button onclick="retryJob('{{ job.id }}')" class="bg-green-500 text-white px-2 py-1 rounded text-xs hover:bg-green-600">
                    Run Now
                  </button>
                  <button onclick="deleteJob('{{ job.id }}')" class="bg-red-500 text-white px-2 py-1 rounded text-xs hover:bg-red-600">
                    Delete
                  </button>
                </td>
              </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
    {% endif %}
  </div>

  <script>
    async function retryJob(jobId) {
      const res = await fetch("/job/retry", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ job_id: jobId })
      });
      if (res.ok) location.reload();
    }

    async function deleteJob(jobId) {
      const res = await fetch("/job/action", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "delete", job_id: jobId })
      });
      if (res.ok) location.reload();
    }
  </script>
{% endblock content %}
